\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{luamacros}[2022/07/13 The Lua code used in the document]

\RequirePackage{luacode}

% Globally declared functions
\begin{luacode}
doc=doc or {}
doc.f_to_c = function(f)
    return (f - 32) * (5 / 9)
end

doc.round = function(n)
    return math.floor(n + 0.5)
end

doc.round_to_nearest = function(n, threshold)
    return doc.round(n / threshold) * threshold
end

doc.pluralize = function(word, number)
    if number == 1 then
        return word
    else
        return word .. "s"
    end
end

doc.density = function(name, measure, dens, numerator, denominator)
    local frac = nil
    local d = nil
    if denominator == "" then
        frac = numerator
        d = 1
    else
        d = tonumber(denominator)
        frac = "\\fr{" .. numerator .. "}{" .. denominator .. "}"
    end
    local m = doc.pluralize(measure, tonumber(numerator))
    local mass = doc.round(tonumber(numerator) / d * dens)
    return frac .. " " .. m .. " (" .. mass .. " grams) " .. name
end
\end{luacode}


% Macros employing the density lua function
\DeclareDocumentCommand{\flour}{ m m g }{%
\directlua{tex.print(doc.density(\luastring{#1} .. " flour", "cup", 150, "#2", \IfNoValueTF{#3}{""}{"#3"}))}%
}

\DeclareDocumentCommand{\yeast}{ m g }{%
\directlua{tex.print(doc.density("yeast", "teaspoon", 3.4, "#1", \IfNoValueTF{#2}{""}{"#2"}))}%
}

\DeclareDocumentCommand{\cornmeal}{ m g }{%
\directlua{tex.print(doc.density("cornmeal", "cup", 140, "#1", \IfNoValueTF{#2}{""}{"#2"}))}%
}

\DeclareDocumentCommand{\milk}{ m g }{%
\directlua{tex.print(doc.density("milk", "cup", 240, "#1", \IfNoValueTF{#2}{""}{"#2"}))}%
}


% Macro for the temperature conversion function
\newcommand{\tempf}[1]{#1\0F (\directlua{tex.write(doc.round_to_nearest(doc.f_to_c(#1), 5))}\0C)}
